[project]
name = "cf_xarray"
description = "A convenience wrapper for using CF attributes on xarray objects"
readme = "README.rst"
requires-python = ">=3.11"
license = {file = "LICENSE"}
keywords = ["xarray", "metadata", "CF conventions"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "xarray>=2024.7.0",
]
dynamic = ["version"]

[project.optional-dependencies]
all = ["matplotlib", "pint >=0.18, !=0.24.0", "shapely", "regex", "rich", "pooch"]

[project.urls]
homepage = "https://cf-xarray.readthedocs.io"
documentation = "https://cf-xarray.readthedocs.io"
repository = "https://github.com/xarray-contrib/cf-xarray.git"
changelog = "https://cf-xarray.readthedocs.io/en/latest/whats-new.html"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["cf_xarray"]

[tool.hatch.version]
source = "vcs"
fallback-version = "999"

[tool.hatch.version.raw-options]
version_file = "cf_xarray/_version.py"
template = '__version__ = "{version}"'

[tool.ruff]
target-version = "py311"
builtins = ["ellipsis"]
exclude = [
    ".eggs",
    "doc",
]

[tool.ruff.lint]
# E402: module level import not at top of file
# E501: line too long - let black worry about that
# E731: do not assign a lambda expression, use a def
ignore = [
    "E402",
    "E501",
    "E731",
    "B018",
    "B015",
]
select = [
    # Bugbear
    "B",
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
    # Pyupgrade
    "UP",
]

[tool.ruff.lint.isort]
known-first-party = ["cf_xarray"]
known-third-party = [
    "dask",
    "matplotlib",
    "numpy",
    "pandas",
    "pint",
    "pkg_resources",
    "pytest",
    "setuptools",
    "sphinx_autosummary_accessors",
    "xarray"
]

[tool.ruff.format]
# Enable reformatting of code snippets in docstrings.
docstring-code-format = true


[tool.pytest]
python_files = "test_*.py"
testpaths = ["cf_xarray/tests"]

[tool.rstcheck]
report_level = "WARNING"
ignore_roles = [
    "pr",
    "issue",
]
ignore_directives = [
    "ipython",
    "autodata",
    "autosummary",
]

[tool.nbqa.md]
mdformat = true

[tool.mypy]
exclude = "doc|flycheck"
files = "cf_xarray/"
show_error_codes = true
warn_unused_ignores = true
warn_unreachable = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]


[[tool.mypy.overrides]]
module=[
    "cftime",
    "pandas",
    "pooch",
    "pint",
    "matplotlib",
    "pytest",
    "shapely",
    "shapely.geometry",
    "xarray.core.pycompat",
]
ignore_missing_imports = true

[tool.coverage.run]
omit = ["*/tests/*"]

[dependency-groups]
test-base = [
    "pytest-cov",
    "pytest",
    "pytest-xdist",
    "pytest-pretty",
]

test = [
    {include-group = "test-base"},
    "dask",
    "flox",
    "lxml",
    "matplotlib",
    "netcdf4",
    "pandas",
    "pint",
    "pooch",
    "regex",
    "rich",
    "scipy",
    "shapely",
    "pyproj",
]

test-no-optional = [
    {include-group = "test-base"},
    "dask",
    "matplotlib",
    "netcdf4",
    "pandas",
    "pooch",
]

test-min-deps = [
    {include-group = "test-base"},
    "dask",
    "flox",
    "lxml",
    "matplotlib",
    "netcdf4",
    "pandas",
    "pint>=0.18",
    "pooch",
    "regex",
    "rich",
    "scipy",
    "shapely",
    "pyproj",
]

docs = [
    "matplotlib",
    "netcdf4",
    "pooch",
    "sphinx",
    "sphinx-copybutton",
    "sphinx-autobuild",
    "numpydoc",
    "sphinx-autosummary-accessors",
    "ipython",
    "ipykernel",
    "ipywidgets",
    "pandas",
    "pint",
    "regex",
    "shapely",
    "furo>=2024",
    "myst-nb",
    "pyproj",
]

test-upstream = [
    {include-group = "test-base"},
    "pytest-reportlog",
    "dask",
    "matplotlib",
    "netcdf4",
    "pandas",
    "pooch",
    "rich",
    "shapely",
    "pyproj",
    "xarray @ git+https://github.com/pydata/xarray.git",
    "flox @ git+https://github.com/dcherian/flox.git",
    "pint @ git+https://github.com/hgrecco/pint.git",
]

typing = [
    "mypy",
]
